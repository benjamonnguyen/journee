package components

templ JournalView() {
    <style>
        #journal-textarea {
            margin-bottom: 15px;
        }
        #journal-textarea input {
            font-size:12pt;
            resize: none;
            width: 100%;
            height: 20vh;
        }
        #form-footer {
            display: flex;
            align-items: center;
            flex-direction: column;
            width: 100%;
        }
        #energy-slider-container {
            margin-bottom: 1rem;
        }
        #emotion-selection {
            margin-bottom: 1.5rem;
        }
        button[type="submit"] {
            padding: 0.5rem 1.2rem;
            font-size: medium;
        }
        #status {
            margin-top: 1.5rem;
            color: var(--grey-800);
            font-size: small;
        }
    </style>
    <div
        id="app"
        x-data="{
            form: {
                Date: new Date().toLocaleDateString('en-CA'),
                Content: '',
            },
            status: '',
        }">
        <form @submit.prevent="onSubmit">
            <input type="date" name="date" x-model="form.Date" />
            <div id="journal-textarea">
                <textarea name="content" x-model="form.Content" autofocus></textarea>
            </div>

            @energySlider(0, 100, energyThresholds)
            @emotionSelection(emotionOptions)

            <div id="form-footer">
                <button type="submit">Save</button>
                <span id="status" x-text="status" x-show="status"></span>
            </div>
        </form>
    </div>
    <script>
        async function onSubmit() {
            const response = await fetch("/api/journal", {
                method: "POST",
                body: JSON.stringify(this.form),
                headers: {
                    "Content-Type": "application/json",
                },
            });
            if (!response.ok) {
                this.status = (await response.json()).message;
            } else {
                this.status = "Synchronized";
            }
        }
    </script>
}